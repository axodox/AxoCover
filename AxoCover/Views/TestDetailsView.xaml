<views:View x:Class="AxoCover.Views.TestDetailsView" 
            x:TypeArguments="viewModels:TestDetailsViewModel"
            xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
            xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
            xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
            xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
            xmlns:vsui="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.14.0"
            xmlns:converters="clr-namespace:AxoCover.Converters"
            xmlns:controls="clr-namespace:AxoCover.Controls"
            xmlns:models="clr-namespace:AxoCover.Models"
            xmlns:viewModels="clr-namespace:AxoCover.ViewModels"
            xmlns:views="clr-namespace:AxoCover.Views"
            xmlns:res="clr-namespace:AxoCover"
            mc:Ignorable="d" d:DesignHeight="300" d:DesignWidth="300">
  <UserControl.Resources>
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    <converters:NullToVisibilityConverter x:Key="NullToVisibilityConverter"/>
    <converters:TimeSpanFormatter x:Key="TimeSpanFormatter"/>
  </UserControl.Resources>
  <StackPanel x:Name="_root"
              Background="{DynamicResource {x:Static vsui:EnvironmentColors.CommandBarGradientBrushKey}}"
              Visibility="{Binding IsSelectionValid, Converter={StaticResource BooleanToVisibilityConverter}}">
    <DockPanel Margin="3">
      <Image Stretch="None" DockPanel.Dock="Left" Margin="0,0,3,0" VerticalAlignment="Center">
        <Image.Style>
          <Style TargetType="Image">
            <Setter Property="Source" Value="{Binding SelectedItem.IconPath}"/>
            <Style.Triggers>
              <DataTrigger Binding="{Binding SelectedItem.Result.HasMultiplePages}" Value="True">
                <Setter Property="Source" Value="{Binding SelectedItem.Result.IconPath}"/>
              </DataTrigger>
            </Style.Triggers>
          </Style>
        </Image.Style>
      </Image>
      <StackPanel Orientation="Horizontal" DockPanel.Dock="Right"
                  Visibility="{Binding IsMethod, Converter={StaticResource BooleanToVisibilityConverter}}">
        <controls:ActionButton Text="{x:Static res:Resources.Source}" VerticalAlignment="Center" Margin="3,0,0,0"
                               Icon="/AxoCover;component/Resources/source.png"
                               Command="{Binding NavigateToTestItemCommand}"/>
        <controls:ActionButton Text="{x:Static res:Resources.Debug}" VerticalAlignment="Center" Margin="3,0,0,0"
                               Icon="/AxoCover;component/Resources/debug.png"
                               Command="{Binding DebugTestsCommand}"
                               CommandParameter="{Binding SelectedItem.CodeItem}"/>
      </StackPanel>
      <TextBlock Text="{Binding SelectedItem.CodeItem.Kind}" DockPanel.Dock="Right"
                 Visibility="{Binding IsGroup, Converter={StaticResource BooleanToVisibilityConverter}}"/>
      <DockPanel>
        <Label Margin="3,0" VerticalAlignment="Center" Opacity="0.5" DockPanel.Dock="Right"
               Content="{Binding SelectedItem.Duration, Converter={StaticResource TimeSpanFormatter}}">
          <Label.Style>
            <Style TargetType="Label" BasedOn="{StaticResource {x:Type Label}}">
              <Style.Triggers>
                <DataTrigger Binding="{Binding SelectedItem.Duration.Ticks}" Value="0">
                  <Setter Property="Visibility" Value="Collapsed"/>
                </DataTrigger>
              </Style.Triggers>
            </Style>
          </Label.Style>
        </Label>
        <TextBlock TextTrimming="CharacterEllipsis" VerticalAlignment="Center"
                   Text="{Binding SelectedItem.CodeItem.DisplayName}"
                   ToolTip="{Binding SelectedItem.CodeItem.DisplayName}"/>
      </DockPanel>
    </DockPanel>
    <DockPanel Visibility="{Binding IsMethod, Converter={StaticResource BooleanToVisibilityConverter}}">
      <StackPanel HorizontalAlignment="Center" Orientation="Horizontal" DockPanel.Dock="Bottom"
                  Visibility="{Binding SelectedItem.Result.HasMultiplePages, Converter={StaticResource BooleanToVisibilityConverter}}">          
        <controls:ActionButton Icon="/AxoCover;component/Resources/previous.png"
                               Command="{Binding SelectedItem.Result.PreviousCommand}"/>
        <TextBlock VerticalAlignment="Center" Margin="3,0">
          <TextBlock.Text>
            <MultiBinding StringFormat="{}{0}/{1}">
              <Binding Path="SelectedItem.Result.SelectedPage"/>
              <Binding Path="SelectedItem.Result.PageCount"/>
            </MultiBinding>
          </TextBlock.Text>
        </TextBlock>
        <controls:ActionButton Icon="/AxoCover;component/Resources/next.png"
                               Command="{Binding SelectedItem.Result.NextCommand}"/>
      </StackPanel>
      <ScrollViewer MaxHeight="400" VerticalScrollBarVisibility="Auto"
                    Visibility="{Binding Result, Converter={StaticResource NullToVisibilityConverter}}"
                    DataContext="{Binding SelectedItem.Result}">
        <StackPanel>
          <StackPanel Visibility="{Binding Output, Converter={StaticResource NullToVisibilityConverter}}">
            <TextBlock Text="{x:Static res:Resources.ConsoleOutput}" Margin="3" 
                       Visibility="{Binding AreHeadersVisible, Converter={StaticResource BooleanToVisibilityConverter}}"/>
            <Border Background="{DynamicResource {x:Static vsui:EnvironmentColors.ToolWindowBackgroundBrushKey}}" Margin="3">
              <TextBox Margin="3" TextWrapping="Wrap" IsReadOnly="True" Background="Transparent" BorderThickness="0"          
                       Text="{Binding Output, Mode=OneWay}"/>
            </Border>
          </StackPanel>
        
          <StackPanel Visibility="{Binding ErrorMessage, Converter={StaticResource NullToVisibilityConverter}}">
            <TextBlock Text="{x:Static res:Resources.ErrorMessageAndStackTrace}" Margin="3" 
                       Visibility="{Binding AreHeadersVisible, Converter={StaticResource BooleanToVisibilityConverter}}"/>
            <Border Background="{DynamicResource {x:Static vsui:EnvironmentColors.ToolWindowBackgroundBrushKey}}" Margin="3">
              <TextBox Margin="3" TextWrapping="Wrap" IsReadOnly="True" Background="Transparent" BorderThickness="0"                  
                       Text="{Binding ErrorMessage, Mode=OneWay}"/>
            </Border>
            <ItemsControl Margin="3" ItemsSource="{Binding StackTrace}">
              <ItemsControl.ItemTemplate>
                <DataTemplate>
                  <Border ToolTip="{Binding Method, StringFormat={x:Static res:Resources.StackItemFormat}}">
                    <controls:ActionButton HorizontalAlignment="Left"
                                           Text="{Binding Method, StringFormat={x:Static res:Resources.StackItemFormat}}"
                                           IsEnabled="{Binding HasValidFileReference}"
                                           Tag="{Binding}"
                                           Command="{Binding DataContext.NavigateToStackItemCommand, Source={x:Reference _root}}"
                                           CommandParameter="{Binding}"/>
                  </Border>
                </DataTemplate>
              </ItemsControl.ItemTemplate>
            </ItemsControl>
          </StackPanel>
        </StackPanel>
      </ScrollViewer>
    </DockPanel>
    <UniformGrid Visibility="{Binding IsGroup, Converter={StaticResource BooleanToVisibilityConverter}}" Columns="3">
      <UniformGrid.Resources>
        <Style TargetType="Image">
          <Setter Property="Stretch" Value="Uniform"/>
          <Setter Property="Width" Value="24"/>
          <Setter Property="Height" Value="24"/>
          <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
        <Style TargetType="Label" BasedOn="{StaticResource {x:Type Label}}">
          <Setter Property="FontSize" Value="24"/>
          <Setter Property="VerticalAlignment" Value="Center"/>
          <Setter Property="Margin" Value="12,0,0,0"/>
        </Style>
        <Style x:Key="HelpLabel" TargetType="Label" BasedOn="{StaticResource {x:Type Label}}">
          <Setter Property="FontSize" Value="12"/>
          <Setter Property="DockPanel.Dock" Value="Bottom"/>
          <Setter Property="HorizontalAlignment" Value="Center"/>
          <Setter Property="Margin" Value="0"/>
        </Style>
        <Style TargetType="StackPanel">
          <Setter Property="HorizontalAlignment" Value="Center"/>
          <Setter Property="VerticalAlignment" Value="Center"/>
          <Setter Property="Orientation" Value="Horizontal"/>
        </Style>
        <Style TargetType="DockPanel">
          <Setter Property="HorizontalAlignment" Value="Center"/>
          <Setter Property="VerticalAlignment" Value="Center"/>
          <Setter Property="Margin" Value="6,12"/>
        </Style>
      </UniformGrid.Resources>
      <DockPanel>
        <Label Style="{StaticResource HelpLabel}" Content="{x:Static res:Resources.Namespaces}"/>
        <StackPanel>
          <Image Source="{DynamicResource NamespaceIcon}"/>
          <Label Content="{Binding SelectedItem.NamespaceCount}"/>
        </StackPanel>
      </DockPanel>
      <DockPanel>
        <Label Style="{StaticResource HelpLabel}" Content="{x:Static res:Resources.Classes}"/>
        <StackPanel>
          <Image Source="{DynamicResource ClassIcon}"/>
          <Label Content="{Binding SelectedItem.ClassCount}"/>
        </StackPanel>
      </DockPanel>
      <DockPanel>
        <Label Style="{StaticResource HelpLabel}" Content="{x:Static res:Resources.Tests}"/>
        <StackPanel>
          <Image Source="{DynamicResource TestIcon}"/>
          <Label Content="{Binding SelectedItem.TestCount}"/>
        </StackPanel>
      </DockPanel>

      <DockPanel>
        <Label Style="{StaticResource HelpLabel}" Content="{x:Static res:Resources.Passed}"/>
        <StackPanel>
          <Image Source="{DynamicResource PassedIcon}"/>
          <Label Content="{Binding SelectedItem.PassedCount}"/>
        </StackPanel>
      </DockPanel>
      <DockPanel>
        <Label Style="{StaticResource HelpLabel}" Content="{x:Static res:Resources.Inconclusive}"/>
        <StackPanel>
          <Image Source="{DynamicResource WarningIcon}"/>
          <Label Content="{Binding SelectedItem.WarningCount}"/>
        </StackPanel>
      </DockPanel>
      <DockPanel>
        <Label Style="{StaticResource HelpLabel}" Content="{x:Static res:Resources.Failed}"/>
        <StackPanel>
          <Image Source="{DynamicResource ErrorIcon}"/>
          <Label Content="{Binding SelectedItem.FailedCount}"/>
        </StackPanel>
      </DockPanel>
    </UniformGrid>
  </StackPanel>
</views:View>

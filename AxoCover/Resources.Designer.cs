//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AxoCover {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("AxoCover.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Abort.
        /// </summary>
        public static string AbortTests {
            get {
                return ResourceManager.GetString("AbortTests", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to About.
        /// </summary>
        public static string About {
            get {
                return ResourceManager.GetString("About", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assemblies.
        /// </summary>
        public static string Assemblies {
            get {
                return ResourceManager.GetString("Assemblies", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Build version is {0}, please reference this in your feedback..
        /// </summary>
        public static string AssemblyVersion {
            get {
                return ResourceManager.GetString("AssemblyVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cover after each build.
        /// </summary>
        public static string AutoCover {
            get {
                return ResourceManager.GetString("AutoCover", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Make sure to disable automatic updates for AxoCover extension in Visual Studio otherwise it might interfere with the update system in AxoCover..
        /// </summary>
        public static string AutoUpdateWarning {
            get {
                return ResourceManager.GetString("AutoUpdateWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Branches.
        /// </summary>
        public static string Branches {
            get {
                return ResourceManager.GetString("Branches", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AxoCover is getting more features as time goes, if you want to try them and give feedback, you can select a development branch here:.
        /// </summary>
        public static string BranchesDescription {
            get {
                return ResourceManager.GetString("BranchesDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Build.
        /// </summary>
        public static string BuildAndRefresh {
            get {
                return ResourceManager.GetString("BuildAndRefresh", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Building....
        /// </summary>
        public static string Building {
            get {
                return ResourceManager.GetString("Building", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Calculating....
        /// </summary>
        public static string CalculatingOutputSize {
            get {
                return ResourceManager.GetString("CalculatingOutputSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not open file: {0}..
        /// </summary>
        public static string CannotOpenFile {
            get {
                return ResourceManager.GetString("CannotOpenFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not open path: {0}..
        /// </summary>
        public static string CannotOpenPath {
            get {
                return ResourceManager.GetString("CannotOpenPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refresh.
        /// </summary>
        public static string CheckForUpdates {
            get {
                return ResourceManager.GetString("CheckForUpdates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Classes.
        /// </summary>
        public static string Classes {
            get {
                return ResourceManager.GetString("Classes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clear.
        /// </summary>
        public static string Clear {
            get {
                return ResourceManager.GetString("Clear", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Collapse.
        /// </summary>
        public static string CollapseAll {
            get {
                return ResourceManager.GetString("CollapseAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Console output.
        /// </summary>
        public static string ConsoleOutput {
            get {
                return ResourceManager.GetString("ConsoleOutput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cover.
        /// </summary>
        public static string Cover {
            get {
                return ResourceManager.GetString("Cover", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Coverage.
        /// </summary>
        public static string Coverage {
            get {
                return ResourceManager.GetString("Coverage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Coverage colors.
        /// </summary>
        public static string CoverageColors {
            get {
                return ResourceManager.GetString("CoverageColors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cover tests to get a coverage report..
        /// </summary>
        public static string CoverageExplorerPlaceholder {
            get {
                return ResourceManager.GetString("CoverageExplorerPlaceholder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Report.
        /// </summary>
        public static string CoverageHeader {
            get {
                return ResourceManager.GetString("CoverageHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Search coverage results of methods, classes, namespaces and projects.
        /// </summary>
        public static string CoverageSearchPlaceholder {
            get {
                return ResourceManager.GetString("CoverageSearchPlaceholder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Coverage.
        /// </summary>
        public static string CoverageSettings {
            get {
                return ResourceManager.GetString("CoverageSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Calculating coverage by test allows you to select tests and see their coverage highlighted. It also allows you to right click the coverage ribbon in the editor and jump to the tests visiting the given line. On the other hand coverage by test has a slight performance hit and it does increase the size of the coverage report..
        /// </summary>
        public static string CoverByTestDescription {
            get {
                return ResourceManager.GetString("CoverByTestDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To get coverage by test we need to cover test assemblies too. Hence you cannot exclude test assemblies while also enabling coverage by test..
        /// </summary>
        public static string CoverByTestExcludeByTestAssemblyWarning {
            get {
                return ResourceManager.GetString("CoverByTestExcludeByTestAssemblyWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Covered.
        /// </summary>
        public static string Covered {
            get {
                return ResourceManager.GetString("Covered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cover test.
        /// </summary>
        public static string CoverTest {
            get {
                return ResourceManager.GetString("CoverTest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cover tests.
        /// </summary>
        public static string CoverTests {
            get {
                return ResourceManager.GetString("CoverTests", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Debug.
        /// </summary>
        public static string Debug {
            get {
                return ResourceManager.GetString("Debug", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Debugger attached successfully..
        /// </summary>
        public static string DebuggerAttached {
            get {
                return ResourceManager.GetString("DebuggerAttached", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attaching debugger....
        /// </summary>
        public static string DebuggerAttaching {
            get {
                return ResourceManager.GetString("DebuggerAttaching", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Debugger failed to attach..
        /// </summary>
        public static string DebuggerFailedToAttach {
            get {
                return ResourceManager.GetString("DebuggerFailedToAttach", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Debugger timeout.
        /// </summary>
        public static string DebuggerTimeout {
            get {
                return ResourceManager.GetString("DebuggerTimeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is the amount of time in which the debugger must attach to the test process before the operation is aborted. You can increase this value if the debugger times out..
        /// </summary>
        public static string DebuggerTimeoutDescription {
            get {
                return ResourceManager.GetString("DebuggerTimeoutDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Debugging in progress....
        /// </summary>
        public static string DebuggingInProgress {
            get {
                return ResourceManager.GetString("DebuggingInProgress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Debug test.
        /// </summary>
        public static string DebugTest {
            get {
                return ResourceManager.GetString("DebugTest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Debug tests.
        /// </summary>
        public static string DebugTests {
            get {
                return ResourceManager.GetString("DebugTests", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AxoCover supports only the desktop version of .Net Framework. .Net Core / Xamarin projects are NOT supported..
        /// </summary>
        public static string DesktopOnlyNote {
            get {
                return ResourceManager.GetString("DesktopOnlyNote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The master branch is used to test completed features before they are released. This branch should have most things working, but expect to run into some bugs and regressions occasionally..
        /// </summary>
        public static string DevelopmentBranchDescription {
            get {
                return ResourceManager.GetString("DevelopmentBranchDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Done..
        /// </summary>
        public static string Done {
            get {
                return ResourceManager.GetString("Done", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable telemetry.
        /// </summary>
        public static string EnableTelemetry {
            get {
                return ResourceManager.GetString("EnableTelemetry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error.
        /// </summary>
        public static string Error {
            get {
                return ResourceManager.GetString("Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error message &amp; stack-trace.
        /// </summary>
        public static string ErrorMessageAndStackTrace {
            get {
                return ResourceManager.GetString("ErrorMessageAndStackTrace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exception colors.
        /// </summary>
        public static string ExceptionColors {
            get {
                return ResourceManager.GetString("ExceptionColors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AxoCover encountered an error:.
        /// </summary>
        public static string ExceptionEncountered {
            get {
                return ResourceManager.GetString("ExceptionEncountered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exclude attributes.
        /// </summary>
        public static string ExcludeAttributes {
            get {
                return ResourceManager.GetString("ExcludeAttributes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exclude a class or method by filter(s) that match attributes that have been applied. An * can be used as a wildcard. Syntax: &lt;filter&gt;[;filter][;filter]..
        /// </summary>
        public static string ExcludeAttributesDescription {
            get {
                return ResourceManager.GetString("ExcludeAttributesDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exclude directories.
        /// </summary>
        public static string ExcludeDirectories {
            get {
                return ResourceManager.GetString("ExcludeDirectories", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assemblies being loaded from these locations will be ignored. Syntax: &lt;path to exclude&gt;[;&lt;path to exclude&gt;]..
        /// </summary>
        public static string ExcludeDirectoriesDescription {
            get {
                return ResourceManager.GetString("ExcludeDirectoriesDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exclude files.
        /// </summary>
        public static string ExcludeFiles {
            get {
                return ResourceManager.GetString("ExcludeFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exclude a class (or methods) by filter(s) that match the filenames. An * can be used as a wildcard. Syntax: &lt;filter&gt;[;&lt;filter&gt;][;&lt;filter&gt;]..
        /// </summary>
        public static string ExcludeFilesDescription {
            get {
                return ResourceManager.GetString("ExcludeFilesDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Executing tests ({0} / {1})....
        /// </summary>
        public static string ExecutingTests {
            get {
                return ResourceManager.GetString("ExecutingTests", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed.
        /// </summary>
        public static string Failed {
            get {
                return ResourceManager.GetString("Failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Feature branches offer access to the latest features during their development. Because of this they are expected to contain various issues until the later stage of their development, so these releases are only recommended for testing..
        /// </summary>
        public static string FeatureBranchDescription {
            get {
                return ResourceManager.GetString("FeatureBranchDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Feedback.
        /// </summary>
        public static string Feedback {
            get {
                return ResourceManager.GetString("Feedback", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AxoCover is a small project and lacks the resources to test all possibilities which it might encounter in the wild. Please help us with providing feedback to make AxoCover even better..
        /// </summary>
        public static string FeedbackDescription {
            get {
                return ResourceManager.GetString("FeedbackDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Filters.
        /// </summary>
        public static string Filters {
            get {
                return ResourceManager.GetString("Filters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A list of filters to apply to selectively include or exclude assemblies and classes from coverage results. Syntax: (+|-)[Assembly-Filter]Type-Filter..
        /// </summary>
        public static string FiltersDescription {
            get {
                return ResourceManager.GetString("FiltersDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Finishing operation....
        /// </summary>
        public static string FinishingOperation {
            get {
                return ResourceManager.GetString("FinishingOperation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to These are the currently supported versions, others might or might not work. Please report all issues you encounter on GitHub..
        /// </summary>
        public static string FrameworkNote {
            get {
                return ResourceManager.GetString("FrameworkNote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export.
        /// </summary>
        public static string GenerateReport {
            get {
                return ResourceManager.GetString("GenerateReport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Generating coverage report....
        /// </summary>
        public static string GeneratingCoverageReport {
            get {
                return ResourceManager.GetString("GeneratingCoverageReport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Generating report....
        /// </summary>
        public static string GeneratingReport {
            get {
                return ResourceManager.GetString("GeneratingReport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Go to issues....
        /// </summary>
        public static string GoToIssues {
            get {
                return ResourceManager.GetString("GoToIssues", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Go to source.
        /// </summary>
        public static string GoToSource {
            get {
                return ResourceManager.GetString("GoToSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inconclusive.
        /// </summary>
        public static string Inconclusive {
            get {
                return ResourceManager.GetString("Inconclusive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Initializing test runner....
        /// </summary>
        public static string InitializingTestRunner {
            get {
                return ResourceManager.GetString("InitializingTestRunner", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installing {0}....
        /// </summary>
        public static string InstallingUpdate {
            get {
                return ResourceManager.GetString("InstallingUpdate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update.
        /// </summary>
        public static string InstallUpdate {
            get {
                return ResourceManager.GetString("InstallUpdate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open and build a solution to start testing..
        /// </summary>
        public static string Introduction {
            get {
                return ResourceManager.GetString("Introduction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Build project automatically.
        /// </summary>
        public static string IsAutoBuildEnabled {
            get {
                return ResourceManager.GetString("IsAutoBuildEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Calculate coverage of each test separately.
        /// </summary>
        public static string IsCoveringByTest {
            get {
                return ResourceManager.GetString("IsCoveringByTest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Debug mode.
        /// </summary>
        public static string IsDebugModeEnabled {
            get {
                return ResourceManager.GetString("IsDebugModeEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If enabled all exceptions will be shown in the output window including handled ones which happen normally during test execution. Also in case of fatal exceptions a break point will be triggered in the executor. This is only recommended for debugging advanced issues with the test runner..
        /// </summary>
        public static string IsDebugModeEnabledDescription {
            get {
                return ResourceManager.GetString("IsDebugModeEnabledDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exclude test assemblies.
        /// </summary>
        public static string IsExcludingTestAssemblies {
            get {
                return ResourceManager.GetString("IsExcludingTestAssemblies", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Include solution output only.
        /// </summary>
        public static string IsIncludingSolutionAssemblies {
            get {
                return ResourceManager.GetString("IsIncludingSolutionAssemblies", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Merge by hash.
        /// </summary>
        public static string IsMergingByHash {
            get {
                return ResourceManager.GetString("IsMergingByHash", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Under some scenarios e.g. using MSTest, an assembly may be loaded many times from different locations. This option is used to merge the coverage results for an assembly regardless of where it was loaded assuming the assembly has the same file-hash in each location..
        /// </summary>
        public static string IsMergingByHashDescription {
            get {
                return ResourceManager.GetString("IsMergingByHashDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Redirect DLLs of test framework assemblies.
        /// </summary>
        public static string IsRedirectingFrameworkAssemblies {
            get {
                return ResourceManager.GetString("IsRedirectingFrameworkAssemblies", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When incompatible versions of test framework or adapter DLLs are found inside a solution or AxoCover, it can cause numerous problems, such as failed test discovery or execution. By enabling this feature the runner will redirect I/O operations targerted towards these assemblies to ensure that the correct versions are used everywhere..
        /// </summary>
        public static string IsRedirectingFrameworkAssembliesDescription {
            get {
                return ResourceManager.GetString("IsRedirectingFrameworkAssembliesDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Skip auto properties.
        /// </summary>
        public static string IsSkippingAutoProps {
            get {
                return ResourceManager.GetString("IsSkippingAutoProps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Neither track nor record auto-implemented properties. That is, skip getters and setters like these: public bool Service { get; set; }.
        /// </summary>
        public static string IsSkippingAutoPropsDescription {
            get {
                return ResourceManager.GetString("IsSkippingAutoPropsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install updates automatically.
        /// </summary>
        public static string IsUpdatingAutomatically {
            get {
                return ResourceManager.GetString("IsUpdatingAutomatically", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Limit visitor count.
        /// </summary>
        public static string IsVisitorCountLimited {
            get {
                return ResourceManager.GetString("IsVisitorCountLimited", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Limiting the count of recorded visitors can improve coverage profiling performance while the reported coverage remains the same - the visitor counts will be truncated however..
        /// </summary>
        public static string IsVisitorCountLimitedDescription {
            get {
                return ResourceManager.GetString("IsVisitorCountLimitedDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Jump to test.
        /// </summary>
        public static string JumpToTest {
            get {
                return ResourceManager.GetString("JumpToTest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to License.
        /// </summary>
        public static string License {
            get {
                return ResourceManager.GetString("License", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Lines.
        /// </summary>
        public static string Lines {
            get {
                return ResourceManager.GetString("Lines", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Loading solution....
        /// </summary>
        public static string LoadingSolution {
            get {
                return ResourceManager.GetString("LoadingSolution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Methods.
        /// </summary>
        public static string Methods {
            get {
                return ResourceManager.GetString("Methods", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mixed.
        /// </summary>
        public static string Mixed {
            get {
                return ResourceManager.GetString("Mixed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Namespaces.
        /// </summary>
        public static string Namespaces {
            get {
                return ResourceManager.GetString("Namespaces", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to None.
        /// </summary>
        public static string None {
            get {
                return ResourceManager.GetString("None", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OK.
        /// </summary>
        public static string OK {
            get {
                return ResourceManager.GetString("OK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot import OpenCover coverage file {0}..
        /// </summary>
        public static string OpenCoverageFailed {
            get {
                return ResourceManager.GetString("OpenCoverageFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open external report.
        /// </summary>
        public static string OpenCoverageReport {
            get {
                return ResourceManager.GetString("OpenCoverageReport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OpenCover coverage reports (*.xml)|*.xml|All files (*.*)|*.*.
        /// </summary>
        public static string OpenCoverageReportFilter {
            get {
                return ResourceManager.GetString("OpenCoverageReportFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Issue tracker.
        /// </summary>
        public static string OpenIssues {
            get {
                return ResourceManager.GetString("OpenIssues", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Import.
        /// </summary>
        public static string OpenReport {
            get {
                return ResourceManager.GetString("OpenReport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Origin.
        /// </summary>
        public static string Origin {
            get {
                return ResourceManager.GetString("Origin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Output directories.
        /// </summary>
        public static string OutputDirectories {
            get {
                return ResourceManager.GetString("OutputDirectories", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Investigate files used for testing and free up space consumed by leftovers..
        /// </summary>
        public static string OutputDirectorySettingsDescription {
            get {
                return ResourceManager.GetString("OutputDirectorySettingsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Passed.
        /// </summary>
        public static string Passed {
            get {
                return ResourceManager.GetString("Passed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Push exception.
        /// </summary>
        public static string PushException {
            get {
                return ResourceManager.GetString("PushException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ready..
        /// </summary>
        public static string Ready {
            get {
                return ResourceManager.GetString("Ready", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Register coverage tool as.
        /// </summary>
        public static string RegisterAs {
            get {
                return ResourceManager.GetString("RegisterAs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The release branch offers the most stable experience and it is recommended for most users..
        /// </summary>
        public static string ReleaseBranchDescription {
            get {
                return ResourceManager.GetString("ReleaseBranchDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Releases and updates.
        /// </summary>
        public static string ReleaseManager {
            get {
                return ResourceManager.GetString("ReleaseManager", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Release notes.
        /// </summary>
        public static string ReleaseNotes {
            get {
                return ResourceManager.GetString("ReleaseNotes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Releases &amp; updates.
        /// </summary>
        public static string Releases {
            get {
                return ResourceManager.GetString("Releases", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Report generator.
        /// </summary>
        public static string ReportGenerator {
            get {
                return ResourceManager.GetString("ReportGenerator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restart.
        /// </summary>
        public static string Restart {
            get {
                return ResourceManager.GetString("Restart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restart.
        /// </summary>
        public static string RestartVisualStudio {
            get {
                return ResourceManager.GetString("RestartVisualStudio", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Results trimmed for better performance. Please refine query..
        /// </summary>
        public static string ResultsTrimmed {
            get {
                return ResourceManager.GetString("ResultsTrimmed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Retry.
        /// </summary>
        public static string RetryUpdate {
            get {
                return ResourceManager.GetString("RetryUpdate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Roll back.
        /// </summary>
        public static string Rollback {
            get {
                return ResourceManager.GetString("Rollback", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you ran into an issue which interferes with your work, you can roll back to an earlier version here. Don&apos;t forget to check the issues board, so we can resolve the issue in the meantime!.
        /// </summary>
        public static string RollbackDescription {
            get {
                return ResourceManager.GetString("RollbackDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Run.
        /// </summary>
        public static string Run {
            get {
                return ResourceManager.GetString("Run", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Run settings.
        /// </summary>
        public static string RunSettings {
            get {
                return ResourceManager.GetString("RunSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select a .runSettings file from your solution here. Warning: some of your settings might be overridden or unsupported when executing with AxoCover..
        /// </summary>
        public static string RunSettingsDescription {
            get {
                return ResourceManager.GetString("RunSettingsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Run test.
        /// </summary>
        public static string RunTest {
            get {
                return ResourceManager.GetString("RunTest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Run tests.
        /// </summary>
        public static string RunTests {
            get {
                return ResourceManager.GetString("RunTests", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scanning solution for tests....
        /// </summary>
        public static string ScanningForTests {
            get {
                return ResourceManager.GetString("ScanningForTests", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Selected.
        /// </summary>
        public static string Selected {
            get {
                return ResourceManager.GetString("Selected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select test.
        /// </summary>
        public static string SelectTest {
            get {
                return ResourceManager.GetString("SelectTest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Send feedback.
        /// </summary>
        public static string SendFeedback {
            get {
                return ResourceManager.GetString("SendFeedback", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Settings.
        /// </summary>
        public static string SettingsHeader {
            get {
                return ResourceManager.GetString("SettingsHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Test anchors.
        /// </summary>
        public static string ShowAnchors {
            get {
                return ResourceManager.GetString("ShowAnchors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Branch coverage.
        /// </summary>
        public static string ShowBranchCoverage {
            get {
                return ResourceManager.GetString("ShowBranchCoverage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exceptions.
        /// </summary>
        public static string ShowExceptions {
            get {
                return ResourceManager.GetString("ShowExceptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Line coverage.
        /// </summary>
        public static string ShowLineCoverage {
            get {
                return ResourceManager.GetString("ShowLineCoverage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Partial coverage.
        /// </summary>
        public static string ShowPartialCoverage {
            get {
                return ResourceManager.GetString("ShowPartialCoverage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shutdown failed..
        /// </summary>
        public static string ShutdownFailed {
            get {
                return ResourceManager.GetString("ShutdownFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shutting down....
        /// </summary>
        public static string ShuttingDown {
            get {
                return ResourceManager.GetString("ShuttingDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Source.
        /// </summary>
        public static string Source {
            get {
                return ResourceManager.GetString("Source", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Source code.
        /// </summary>
        public static string SourceCode {
            get {
                return ResourceManager.GetString("SourceCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to at {0}.
        /// </summary>
        public static string StackItemFormat {
            get {
                return ResourceManager.GetString("StackItemFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Startup timeout.
        /// </summary>
        public static string StartupTimeout {
            get {
                return ResourceManager.GetString("StartupTimeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is the amount of time the UI waits for the test runner to start. You may increase this value if you experience timeouts on test runner startup, this can happen if you have slow storage devices or very large test projects..
        /// </summary>
        public static string StartupTimeoutDescription {
            get {
                return ResourceManager.GetString("StartupTimeoutDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Supported test frameworks:.
        /// </summary>
        public static string SupportedTestFrameworks {
            get {
                return ResourceManager.GetString("SupportedTestFrameworks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AxoCover can record unhandled exceptions and automatically upload them to our HockeyApp portal for investigation. Telemetry data includes Visual Studio and Windows version and a unique installation ID which helps us determine how many users are affected by a specific problem. We do not collect any of your personal information or source code..
        /// </summary>
        public static string TelemetryDescription {
            get {
                return ResourceManager.GetString("TelemetryDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Telemetry is disabled, you can make an exception and upload this report, or go to GitHub and raise an issue there..
        /// </summary>
        public static string TelemetryUploadingDisabled {
            get {
                return ResourceManager.GetString("TelemetryUploadingDisabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Telemetry failed to upload the crash report..
        /// </summary>
        public static string TelemetryUploadingFailed {
            get {
                return ResourceManager.GetString("TelemetryUploadingFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Telemetry is uploading the crash report....
        /// </summary>
        public static string TelemetryUploadingInProgress {
            get {
                return ResourceManager.GetString("TelemetryUploadingInProgress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Telemetry uploaded the crash report..
        /// </summary>
        public static string TelemetryUploadingSucceeded {
            get {
                return ResourceManager.GetString("TelemetryUploadingSucceeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fatal error.
        /// </summary>
        public static string TerminalException {
            get {
                return ResourceManager.GetString("TerminalException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AxoCover ran into an exception which it could not handle, to recover from the error Visual Studio needs to be restarted..
        /// </summary>
        public static string TerminalExceptionDescription {
            get {
                return ResourceManager.GetString("TerminalExceptionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Go to issues on GitHub and post issue manually..
        /// </summary>
        public static string TerminalExceptionIssues {
            get {
                return ResourceManager.GetString("TerminalExceptionIssues", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Push this exception to telemetry, even if telemetry is otherwise disabled..
        /// </summary>
        public static string TerminalExceptionPushDescription {
            get {
                return ResourceManager.GetString("TerminalExceptionPushDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restart Visual Studio..
        /// </summary>
        public static string TerminalExceptionRestartVisualStudio {
            get {
                return ResourceManager.GetString("TerminalExceptionRestartVisualStudio", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Adapter mode.
        /// </summary>
        public static string TestAdapterMode {
            get {
                return ResourceManager.GetString("TestAdapterMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use the integrated adapter mode for executing MSTestV1 tests and the standard mode for MSTestV2, NUnit and xUnit tests..
        /// </summary>
        public static string TestAdapterModeDescription {
            get {
                return ResourceManager.GetString("TestAdapterModeDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Apartment state.
        /// </summary>
        public static string TestApartmentState {
            get {
                return ResourceManager.GetString("TestApartmentState", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select the COM threading model for tests here. Most UI applications require using the single-threaded apartment (STA) model, while non-UI applications can use the multi-threaded apartment (MTA) model too..
        /// </summary>
        public static string TestApartmentStateDescription {
            get {
                return ResourceManager.GetString("TestApartmentStateDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Test discovery failed..
        /// </summary>
        public static string TestDiscoveryFailed {
            get {
                return ResourceManager.GetString("TestDiscoveryFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Test discovery finished..
        /// </summary>
        public static string TestDiscoveryFinished {
            get {
                return ResourceManager.GetString("TestDiscoveryFinished", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Test discovery started..
        /// </summary>
        public static string TestDiscoveryStarted {
            get {
                return ResourceManager.GetString("TestDiscoveryStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Test execution failed..
        /// </summary>
        public static string TestExecutionFailed {
            get {
                return ResourceManager.GetString("TestExecutionFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Test execution finished..
        /// </summary>
        public static string TestExecutionFinished {
            get {
                return ResourceManager.GetString("TestExecutionFinished", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Test execution started..
        /// </summary>
        public static string TestExecutionStarted {
            get {
                return ResourceManager.GetString("TestExecutionStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hmm... AxoCover found no unit tests in this solution. Maybe you wanted to add a new unit test project and some tests? Or, open an existing coverage report:.
        /// </summary>
        public static string TestExplorerPlaceholder {
            get {
                return ResourceManager.GetString("TestExplorerPlaceholder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Platform.
        /// </summary>
        public static string TestPlatform {
            get {
                return ResourceManager.GetString("TestPlatform", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to While most .Net code can run on a number of platforms (compiled to &quot;Any CPU&quot;). If you use libraries compiled to a specific platform then it is important to specify it here, otherwise your assemblies might fail to load..
        /// </summary>
        public static string TestPlatformDescription {
            get {
                return ResourceManager.GetString("TestPlatformDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Test protocol.
        /// </summary>
        public static string TestProtocol {
            get {
                return ResourceManager.GetString("TestProtocol", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Some firewalls might interfere with the communication between Visual Studio and the test runner process. Choosing a different option here might resolve the issue..
        /// </summary>
        public static string TestProtocolDescription {
            get {
                return ResourceManager.GetString("TestProtocolDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Test run aborted..
        /// </summary>
        public static string TestRunAborted {
            get {
                return ResourceManager.GetString("TestRunAborted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Test run failed..
        /// </summary>
        public static string TestRunFailed {
            get {
                return ResourceManager.GetString("TestRunFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Test runners.
        /// </summary>
        public static string TestRunners {
            get {
                return ResourceManager.GetString("TestRunners", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Test runners affect things such as how files are deployed for tests, the order of execution and performance. If you find tests failing during coverage runs but passing otherwise, try selecting a different test runner here..
        /// </summary>
        public static string TestRunnerSettingsDescription {
            get {
                return ResourceManager.GetString("TestRunnerSettingsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tests.
        /// </summary>
        public static string Tests {
            get {
                return ResourceManager.GetString("Tests", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Search test methods, classes, namespaces and projects.
        /// </summary>
        public static string TestSearchPlaceholder {
            get {
                return ResourceManager.GetString("TestSearchPlaceholder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Test settings.
        /// </summary>
        public static string TestSettings {
            get {
                return ResourceManager.GetString("TestSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tests.
        /// </summary>
        public static string TestsHeader {
            get {
                return ResourceManager.GetString("TestsHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Total.
        /// </summary>
        public static string Total {
            get {
                return ResourceManager.GetString("Total", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Trace.
        /// </summary>
        public static string Trace {
            get {
                return ResourceManager.GetString("Trace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uncovered.
        /// </summary>
        public static string Uncovered {
            get {
                return ResourceManager.GetString("Uncovered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Last checked for updates at {0}..
        /// </summary>
        public static string UpdateCheckTime {
            get {
                return ResourceManager.GetString("UpdateCheckTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update to {0} failed..
        /// </summary>
        public static string UpdateFailed {
            get {
                return ResourceManager.GetString("UpdateFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update to {0} succeeded..
        /// </summary>
        public static string UpdateSucceeded {
            get {
                return ResourceManager.GetString("UpdateSucceeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Visited {0} time(s).
        /// </summary>
        public static string VisitorCount {
            get {
                return ResourceManager.GetString("VisitorCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Visual aids.
        /// </summary>
        public static string VisualAids {
            get {
                return ResourceManager.GetString("VisualAids", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Visualization.
        /// </summary>
        public static string VisualizationSettings {
            get {
                return ResourceManager.GetString("VisualizationSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Warnings.
        /// </summary>
        public static string Warnings {
            get {
                return ResourceManager.GetString("Warnings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Web site.
        /// </summary>
        public static string WebSite {
            get {
                return ResourceManager.GetString("WebSite", resourceCulture);
            }
        }
    }
}
